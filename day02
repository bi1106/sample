*데이터 형식에 따른 변수 선언
	선언이란?
		- 변수가 저장할 데이터의 형식과 이름을 정하는 것.
		선언방법 
		 	1) int age = 26;		// 선언과 초기값 저장
		 	2) int age;				// 초기값 없음.
		 		
		 		System.out.println("나이 : " + age); << 문법 오류(컴파일 오류)
		 		
		 		:
		 		
		 	   age = 26;			// 필요할 때 값 저장

*비트와 바이트
	- 메모리에 데이터를 저장할 때 모든 값은 0과 1로만 합니다.(2진법, binary)
	- 정수, 실수, 문자열, 문자와 같은 데이터가 모두 2진법으로 변환된다.		
	- 비트는 0또는 1을 표시하는 한 자리
	
   - 바이트는 8비트가 모여서 1바이트를 만든다.
   - 1024바이트가 모이면 1KB
   - 1024KB는 1MB, 1024MB는 1GB, 1024GB는 1TB, 1024TB는 1PB 	 
   - 원시형 데이터 타입은 각각 다른 메모리 바이트를 할당 받게 된다.
   
   
*데이터의 기본 형식과 크기
 
 정수는 byte(1바이트) < short(2바이트) < int(4바이트) < long(8바이트)
 실수는 float(4바이트) < double(8바이트)
 문자형 char(2바이트) , 논리형 boolean(1바이트)
 
*정수 8바이트 long과 실수 8바이트 double은 메모리 크기는 같지만 표현 방식이 다르다.
 double 형식이 훨씬 매우 큰 범위의 값을 표현한다.
 
 
*자동 캐스팅(자동으로 데이터 형식이 변환된다.)
 	예) int 값을 double 변수로 저장할 때  double weight = 57; << 오류x
 		반대로 double값을 int 변수로 저장할 수 없다. int age = 34.2; << 오류o
 
 
*강제 캐스팅(직접적인 명령으로 데이터 형식이 변환된다.
 	int age = 34.2; 와 같은 데이터 변환을 강제로 한다. << 이 경우 데이터 손실이 있을 수 있다.
 	
*리터럴은 값 그 자체, 데이터 형식에 따라 표시하는 방법이 다르다.

 - 1234는 int정수, 메모리 크기는 4바이트
 - 1234L long정수, 메모리 크기는 8바이트
 - 3.14159는 double 실수, 메모리 크기는 8바이트(값의 표현범위, 소수점이하 자리수 차이)
 - 3.14159f는 float 실수, 메모리 크기는 4바이트
 - 'a' 또는 '6'은 char 문자, 메모리 크기는 2바이트
 - true 또는 false는 boolean 논리형, 메모리 크기는 1바이트
 - 원시 타입은 아니지만 다른 프로그래밍 언어에서는 기본 형식으로 사용하는 
 	"java", "12345"는 문자열, 메모리 크기는 문자열 안의 문자갯수에 따라 다르다.